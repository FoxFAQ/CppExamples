Назначение паттерна Bridge
В системе могут существовать классы, отношения между которыми строятся в соответствии со следующей объектно-ориентированной иерархией: абстрактный базовый класс объявляет интерфейс, а конкретные подклассы реализуют его нужным образом. Такой подход является стандартным в ООП, однако, ему свойственны следующие недостатки:

Система, построенная на основе наследования, является статичной. Реализация жестко привязана к интерфейсу. Изменить реализацию объекта некоторого типа в процессе выполнения программы уже невозможно.
Система становится трудно поддерживаемой, если число родственных производных классов становится большим.

Достоинства паттерна Bridge
Проще расширять систему новыми типами за счет сокращения общего числа родственных подклассов.
Возможность динамического изменения реализации в процессе выполнения программы.
Паттерн Bridge полностью скрывает реализацию от клиента. В случае модификации реализации пользовательский код не требует перекомпиляции.

